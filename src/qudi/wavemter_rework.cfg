#  Qudi configuration file for the new core.
#
global:
    # list of modules to load when starting
    startup: []

    #remote_modules_server:
    #    address: 'localhost'
    #    port: 12345

    namespace_server_port: 18861

    default_data_dir: 'C:\\Data'

    force_remote_calls_by_value: True

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

gui:
    time_series_gui:
        module.Class: 'time_series.time_series_gui_kilian.TimeSeriesGui'
        #module.Class: 'time_series.time_series_gui_histogram.TimeSeriesGui'
        options:
            use_antialias: True  # optional, set to False if you encounter performance issues
        connect:
            _time_series_logic_con: time_series_reader_logic

    scanner_gui:
        module.Class: 'scanning.scannergui.ScannerGui'
        options:
            image_axes_padding: 0.02
            default_position_unit_prefix: null  # optional, use unit prefix characters, e.g. 'u' or 'n'
            optimizer_plot_dimensions: [2,1]
        connect:
            scanning_logic: scanning_probe_logic
            data_logic: scanning_data_logic
            optimize_logic: scanning_optimize_logic

    odmr_gui:
        module.Class: 'odmr.odmrgui.OdmrGui'
        connect:
            odmr_logic: 'odmr_logic'

    wavemeter_scanning_gui:
        module.Class: 'wavemeter.wavemeter_scanning_gui.WavemeterHistogramGui'
        connect:
            _wavemeter_histogram_logic_con: wavemeter_scanning_logic

    pulsed_gui:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsed_master_logic'

    spectrometer:
        module.Class: 'spectrometer.spectrometer_gui.SpectrometerGui'
        connect:
            spectrometer_logic: 'spectrometerlogic'

    qdplotter:
        module.Class: 'qdplot.qdplot_gui.QDPlotterGui'
        options:
            pen_color_list: [[235,130,39], #orange
                         [97,161,74],  #green
                         [217,94,200], #pink
                         [85,151,206], #blue
                         [216,34,41], #red
                         [210, 203, 15], #yellow
                         [153,153,153] #grey
                         ]
        connect:
            qdplot_logic: 'qdplotlogic'

logic:
    time_series_reader_logic:
        module.Class: 'time_series_reader_logic.TimeSeriesReaderLogic'
        options:
            use_own_data_buffer: False
            max_frame_rate: 20  # optional (10Hz by default)
            calc_digital_freq: True  # optional (True by default)
        connect:
            streamer: ni_instreamer #instream_dummy #ni_instreamer

    scanning_probe_logic:
        module.Class: 'scanning_probe_logic.ScanningProbeLogic'
        options:
             max_history_length: 20
             max_scan_update_interval: 2
             position_update_interval: 1
        connect:
             scanner: ni_scanner

    scanning_data_logic:
         module.Class: 'scanning_data_logic.ScanningDataLogic'
         options:
             max_history_length: 20
         connect:
             scan_logic: scanning_probe_logic

    scanning_optimize_logic:
         module.Class: 'scanning_optimize_logic.ScanningOptimizeLogic'
         connect:
             scan_logic: scanning_probe_logic

    odmr_logic:
        module.Class: 'odmr_logic.OdmrLogic'
        connect:
            microwave: mykrowave #'microwave_dummy' #mykrowave
            data_scanner: ni_finite_sampling_input #'finite_sampling_input_dummy' #ni_finite_sampling_input

    wavemeter_scanning_logic:
        module.Class: 'wavemeter_scanning_logic_3.WavemeterLogic'
        options:
            max_frame_rate: 20  # optional (10Hz by default)
            calc_digital_freq: False  # optional (True by default)
        connect:
            streamer: wave_instreamer
            counterlogic: time_series_reader_logic

    sequence_generator_logic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        options:
        #     additional_predefined_methods_path: # optional
        #     additional_sampling_functions_path: # optional
            assets_storage_path: C:\Users\Eddie\qudi\pulsed_assets
        connect:
            pulsegenerator: 'awg70kB'

    pulsed_measurement_logic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        options:
            raw_data_save_type: 'text'
            #additional_extraction_path: # optional
            #additional_analysis_path:   # optional
        connect:
            fastcounter: 'fastcomtec_mcs6' #fastcomtec_mcs6 #'fast_counter_dummy'
            pulsegenerator: 'awg70kB'

    pulsed_master_logic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsed_measurement_logic'
            sequencegeneratorlogic: 'sequence_generator_logic'

    spectrometerlogic:
        module.Class: 'spectrometer_logic.SpectrometerLogic'
        connect:
            spectrometer: 'myspectrometer'

    qdplotlogic:
        module.Class: 'qdplot_logic.QDPlotLogic'
        options:
            default_plot_number: 3

hardware:
    mywavemeter:
        module.Class: 'dummy.wavemeter_dummy.WavemeterDummy'
        options:
            measurement_timing: 10.0e-3 # measurement timing should be given in seconds
            unit: 'vac' # unit of the read out wavelength
            automatic_acquisition: True # if set True on activation of the module measurement starts

    instream_dummy:
        module.Class: 'dummy.data_instream_dummy.InStreamDummy'
        options:
            channel_names:
                - 'digital 1'
                #- 'analog 1'
                #- 'digital 2'
            channel_units:
                - 'Hz'
                #- 'V'
                #- 'Hz'
            channel_signals:  # Can be 'counts' or 'sine'
                - 'counts'
                #- 'sine'
                #- 'counts'
            data_type: 'float64'
            sample_timing: 'CONSTANT'  # Can be 'CONSTANT', 'TIMESTAMP' or 'RANDOM'

    microwave_dummy:
        module.Class: 'dummy.microwave_dummy.MicrowaveDummy'

    finite_sampling_input_dummy:
        module.Class: 'dummy.finite_sampling_input_dummy.FiniteSamplingInputDummy'
        options:
            simulation_mode: 'ODMR'
            sample_rate_limits: [1, 1e6]
            frame_size_limits: [1, 1e9]
            channel_units:
                'APD counts': 'c/s'
                'Photodiode': 'V'

    wave_instreamer:
        #module.Class: 'wavemeter.high_finesse_wavemeter.HighFinesseWavemeter'
        native_module_name: 'wave_instreamer'     #'wave_instreamer'
        address: '134.60.83.135'  #for mc fridge '134.60.83.135'
        port: 12345

    ni_instreamer:
          module.Class: 'ni_x_series.ni_x_series_in_streamer.NIXSeriesInStreamer'
          options:
              device_name: 'Dev3'
              digital_sources:  # optional
                  - 'PFI8'
              #analog_sources:  # optional
                  #- 'ai0'
                  #- 'ai1'
              # external_sample_clock_source: 'PFI0'  # optional
              # external_sample_clock_frequency: 1000  # optional
              # adc_voltage_range: [-10, 10]  # optional
              max_channel_samples_buffer: 10000000  # optional
              read_write_timeout: 100 # optional

    ni_scanner:
        module.Class: 'interfuse.ni_scanning_probe_interfuse.NiScanningProbeInterfuse'
        connect:
            scan_hardware: 'ni_io'
            analog_output: 'ni_ao'
        options:
            ni_channel_mapping:
                x: 'ao0'
                y: 'ao1'
                z: 'ao2'
                #a: 'ao3'
                APD1: 'PFI8'
            position_ranges: # in m
                x: [0, 200e-6]
                y: [0, 200e-6]
                z: [0, 12e-6]
            frequency_ranges:
                x: [1, 700]
                y: [1, 700]
                z: [1, 1000]
            resolution_ranges:
                x: [1, 10000]
                y: [1, 10000]
                z: [1, 10000]
            input_channel_units:
                APD1: 'c/s'
                #AI0: 'V'
                #APD2: 'c/s'
                #APD3: 'c/s'
            backwards_line_resolution: 50 # optional
            maximum_move_velocity: 400e-6 #m/s

    ni_io:
        module.Class: 'ni_x_series.ni_x_series_finite_sampling_io.NIXSeriesFiniteSamplingIO'
        options:
            device_name: 'Dev3'
            input_channel_units:  # optional
                PFI8: 'c/s'
                #PFI9: 'c/s'
                #PFI10: 'c/s'
                #ai0: 'V'
                #ai1: 'V'
            output_channel_units:
                'ao0': 'V'
                'ao1': 'V'
                'ao2': 'V'
            adc_voltage_ranges:
                #ai0: [-10, 10]  # optional
                #ai1: [-10, 10]  # optional
            output_voltage_ranges:
                ao0: [0, 10]
                ao1: [0, 10]
                ao2: [0, 10]

            frame_size_limits: [1, 1e9]  # optional #TODO actual HW constraint?
            output_mode: 'JUMP_LIST' #'JUMP_LIST' # optional, must be name of SamplingOutputMode
            read_write_timeout: 10  # optional
            #sample_clock_output: '/Dev1/PFI11' # optional

    ni_ao:
        module.Class: 'ni_x_series.ni_x_series_analog_output.NIXSeriesAnalogOutput'
        options:
            device_name: 'Dev3'
            channels:
                ao0:
                    limits: [0, 10.0]
                    keep_value: True
                ao1:
                    limits: [0, 10.0]
                    keep_value: True
                ao2:
                    limits: [0, 10.0]
                    keep_value: True
#                 ao3:
#                     limits: [-10.0, 10.0]
#                     keep_value: True

    ni_finite_sampling_input:
        module.Class: 'ni_x_series.ni_x_series_finite_sampling_input.NIXSeriesFiniteSamplingInput'
        options:
            device_name: 'Dev3'
            digital_channel_units:  # optional
                'PFI8': 'c/s'
            analog_channel_units:  # optional
                'ai0': 'V'
                'ai1': 'V'
            # external_sample_clock_source: 'PFI0'  # optional
            # external_sample_clock_frequency: 1000  # optional
            #adc_voltage_range: [-10, 10]  # optional, default [-10, 10]
            max_channel_samples_buffer: 10000000  # optional, default 10000000
            read_write_timeout: 10  # optional, default 10
            sample_clock_output: '/Dev3/PFI0'  # optional

    mykrowave:
        module.Class: 'microwave.mw_source_anritsu.MicrowaveAnritsu'
        options:
            visa_address: 'USB0::0x0B5B::0xFFE0::123803::0::INSTR'
            comm_timeout: 10  # in seconds
            rising_edge_trigger: True  # optional

    sc_magnet:
        module.Class: 'sc_magnet.magnet.Magnet'
        options:
            magnet_port: 7180
            magnet_IP_address_x: 192.168.1.5
            magnet_IP_address_y: 192.168.1.4
            magnet_IP_address_z: 192.168.1.3
            magnet_waitingtime: 0.01 # in seconds

    awg70kB:
        module.Class: 'awg.tektronix_awg70k.AWG70K'
        options:
            awg_visa_address: 'TCPIP0::169.254.43.162::inst0::INSTR'
            awg_ip_address: '169.254.43.162'
            timeout: 120
            # tmp_work_dir: 'C:\\Software\\qudi_pulsed_files' # optional
            ftp_root_dir: 'C:\\inetpub\\ftproot' # optional, root directory on AWG device
            # ftp_login: 'anonymous' # optional, the username for ftp login
            # ftp_passwd: 'anonymous@' # optional, the password for ftp login

    fast_counter_dummy:
        module.Class: 'dummy.fast_counter_dummy.FastCounterDummy'
        options:
            gated: False
            #load_trace: None # path to the saved dummy trace

    fastcomtec_mcs6:
        module.Class: 'fastcomtec.fastcomtecmcs6.FastComtec'
        options:
            gated: True
            trigger_safety: 0e-9
            aom_delay: 0e-9
            minimal_binwidth: 0.2e-9