#  Example Qudi configuration file.

global:
    # list of modules to load when starting
    startup: []

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

gui:

    laser_gui:
        module.Class: 'laser.laser_gui.LaserGui'
        connect:
            laser_logic: laser_logic

    time_series_gui:
        module.Class: 'time_series.time_series_gui.TimeSeriesGui'
#        use_antialias: True  # optional, set to False if you encounter performance issues
        connect:
            _time_series_logic_con: 'time_series_reader_logic'

    switch_gui:
        module.Class: 'switch.switch_gui.SwitchGui'
        connect:
            switchlogic: 'switch_logic'

    odmr_gui:
        module.Class: 'odmr.odmrgui.OdmrGui'
        connect:
            odmr_logic: 'odmr_logic'

    pulsed_gui:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsed_master_logic'

    qdplot_gui:
        module.Class: 'qdplot.qdplot_gui.QDPlotterGui'
        connect:
            qdplot_logic: 'qdplot_logic'

logic:

    laser_logic:
        module.Class: 'laser_logic.LaserLogic'
        options:
            query_interval: 0.1
        connect:
            laser: 'laserquantum_laser'

    time_series_reader_logic:
        module.Class: 'time_series_reader_logic.TimeSeriesReaderLogic'
        connect:
            streamer: 'ni_streamer'
        options:
            max_frame_rate: 10  # optional (10Hz by default)
            calc_digital_freq: True  # optional (True by default)



    switch_logic:
        module.Class: 'switch_logic.SwitchLogic'
        options:
            watchdog_interval: 1
            autostart_watchdog: True
        connect:
            switch: 'switch_ni'

    odmr_logic:
        module.Class: 'odmr_logic.OdmrLogic'
        connect:
            microwave: 'smiq'
            data_scanner: 'ni_fsi'

    pulsed_master_logic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsed_measurement_logic'
            sequencegeneratorlogic: 'sequence_generator_logic'

    sequence_generator_logic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        options:
            assets_storage_path: 'C:/Qudi_data/saved_pulsed_assets'
        #overhead_bytes: 0
        #additional_predefined_methods_path: null
        #additional_sampling_functions_path: null
        #info_on_estimated_upliad_time:
        #disable_benchmark_prompt:
        connect:
            pulsegenerator: 'awg'

    pulsed_measurement_logic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        #additional_extraction_path:
        #additional_analysis_path:
        options:
            default_data_storage_type: 'text'
        connect:
            fastcounter: 'si'
#             microwave: 'mw_source_smiq'
            pulsegenerator: 'awg'

    qdplot_logic:
        module.Class: 'qdplot_logic.QDPlotLogic'

hardware:
    si:
        module.Class: 'fast_adc.spectrum_instrumentation.SpectrumInstrumentation'
        options:
            ai_ch: CH0
            ai_range_mV: 2000
            ai_offset_mV: 0
            ai_termination: '50Ohm'
            ai_coupling: 'DC'
            acq_mode: 'FIFO_GATE'
            acq_HW_avg_num: 1
            acq_pre_trigger_samples: 16
            acq_post_trigger_samples: 16
            buf_notify_size_B: 4096
            clk_reference_Hz: 10e6
            trig_mode: 'EXT'
            trig_level_mV: 1000
            initial_buffer_size_S: 850000000
            repetitions: 0
            row_data_save: False

    awg:
        module.Class: 'awg.keysight_m819x.AWGM8195A'
        options:
            awg_visa_address: 'TCPIP0::localhost::hislip0::INSTR'
            awg_timeout: 30
            pulsed_file_dir: 'D:/Qudi_data/pulsed_files'
            assets_storage_path: 'D:/Qudi_data/saved_pulsed_assets'
            sample_rate_div: 4
            awg_mode: 'MARK'
            default_data_dir: 'D:Data'
    #        waveform_memory_mode: 'awg_segments_ivi'

    laserquantum_laser:
        module.Class: 'laser.laserquantum_laser.LaserQuantumLaser'
#        module.Class: 'laser.laserquantum_laser_ver2.SMD'
        options:
            interface: 'ASRL5::INSTR'
            maxpower: 0.250 # in Watt
            psu: 'SMD6000'

    smiq:
        module.Class: 'microwave.mw_source_smiq.MicrowaveSmiq'
        options:
            visa_address: 'GPIB0::7::INSTR'
            comm_timeout: 10000  # in milliseconds
            visa_baud_rate: null  # optional
            rising_edge_trigger: True  # optional
            frequency_min: null  # optional, in Hz
            frequency_max: null  # optional, in Hz
            power_min: null  # optional, in dBm
            power_max: null  # optional, in dBm

    ni_fsi:
        module.Class: 'ni_x_series.ni_x_series_finite_sampling_input.NIXSeriesFiniteSamplingInput'
        options:
            device_name: 'Dev1'
            analog_channel_units:  # optional
                'ai0': 'V'
            # external_sample_clock_source: 'PFI10'  # optional
            # external_sample_clock_frequency: 1000  # optional
            adc_voltage_range: [-10, 10]  # optional
            max_channel_samples_buffer: 10000000  # optional
            read_write_timeout: 10  # optional
            sample_clock_output: '/Dev1/PFI8'  # optional

    ni_streamer:
        module.Class: 'ni_x_series.ni_x_series_in_streamer.NIXSeriesInStreamer'
        options:
            device_name: 'Dev1'
            analog_sources:  # optional
                - 'ai0'
            adc_voltage_range: [-10, 10]  # optional
            max_channel_samples_buffer: 10000000  # optional
            read_write_timeout: 10  # optional


    switch_ni:
        module.Class: 'switches.digital_switch_ni.DigitalSwitchNI'
        options:
            channel: '/Dev1/PFI0'  # optional
            name: 'SMIQ-AWG'  # optional
            switch_time: 0.1
            remember_states: True
            switches:                       # optional
                MW: ['SMIQ(1-Low)', 'AWG(2-High)']